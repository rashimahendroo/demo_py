from pyteal import *
def approval_program():
on_creation= Seq([
    App.globalPut(Bytes("Creator"),Txn.sender()),
    Assert(Txn.application_args.length()==Int(4)),
    App.globalPut(Bytes("RegBegin"),Btoi(Txn.application_args[0])),
     App.globalPut(Bytes("RegEnd"),Btoi(Txn.application_args[1])),
      App.globalPut(Bytes("VoteBegin"),Btoi(Txn.application_args[2])),
       App.globalPut(Bytes("VoteEnd"),Btoi(Txn.application_args[3])),
       Return(Int(1))
])

is_creator =Txn.sender() ==App.globalGet(Bytes("Creator"))

get_vote_of_sender = App.localGetEx(Int(0),App.id(),Bytes("voted"))

on_closeout =Seq([
    get_vote_of_sender,
    If(And(Global.round() <= App.globalGet(Bytes("voteEnd")),get_vote_of_sender.hasValue()),
      App.globalPut(get_vote_of_sender.value(), App.globalPut(get_vote_of_sender.value()) -Int(1))
    ),
    Return(Int(1))
])

on_register = Return(And(
    Global.round() >= App.globalGet(Bytes("RegBegin)),
     Global.round() >= App.globalGet(Bytes("RegEnd))

     choice = Txn.application_args[1]
     choice_tally =App.globalGet(choice)
     on_vote = Seq([
         Assert(And(
             Global.round() >=App.globalGet(Bytes("VoteBegin")),
             Global.round() >=App.globalGet(Bytes("VoteEnd"))
         )),
         get_vote_of_sender,
         If(get_vote_of_sender,.hasValue(),
         Return(Int(1))         
     ])
     program = Cond(
         [Txn.application_id() == Int(0), on_creation],
         [Txn.on_completion() ==onComplete.DeleteApplication , Return(is_creator)],
         [Txn.on_completion() ==onComplete.UpdateApplication , Return(is_creator)],
          [Txn.on_completion() ==onComplete.CloseOut, on_closeout],
           [Txn.on_completion() ==onComplete.OptIn, on_register],
           [Txn.application_args[0] ==Bytes("vote"), on_vote]
     )
     return program
))